# Things to do

# TF
- See if web instances were reduced to 2
- document headers of each file

# Vault
x edit vaultuserdata.sh with https://dzone.com/articles/using-vault-with-mysql
- create an IAM role for vault EC2 instance to check creditails w/ AWS
- update visio documentation not to use s3 (not ha)
- write a web application stored in github that pulls secrets from vault and connects to db
- send vault IP (or alb url) to web servers w/ ssh provisoner
- ASG & ALB vault if we have time

# Consul
- Check into Consul gui

# Security
- figure out how to allow ssh keys to pass through
- consider disabling bastion access to any server by default
- and/or, disallow any ssh into bastion host by defualt

# Logs
- configure cloudwatchLogs IAM role for web servers
- configure cloudwatchLogs for web servers

################################################
# Vault Steps

# Connect to bastion host
ssh-key-add ./ssh/id_rsa
ssh -A ec2-user@bastion

# Install Vault
wget https://releases.hashicorp.com/vault/0.9.1/vault_0.9.1_linux_amd64.zip
sudo unzip -j vault_*_linux_amd64.zip -d /usr/local/bin

# Verify connectivity
VAULT_IP=10.0.12.30
export VAULT_ADDR=http://${VAULT_IP}:8200
vault status

# Initialize vault
vault init 2>&1 | tee egrep '^Unseal Key|Initial Root Token' > ./vaultkeys.txt
chmod 600 ./vaultkeys.txt

# Unseal vault
egrep -m3 '^Unseal Key' vaultkeys.txt | cut -f2- -d: | tr -d ' ' |
while read key; do
  vault unseal
    #-ca-cert=${VAULT_SSL}/fullchain.pem
    #-client-cert=${VAULT_SSL}/client.pem
    #-client-key=${VAULT_SSL}/privkey.pem
	${key}
done

# Verify the unseal
vault status

# SET Token variable for root configuration
export VAULT_TOKEN=`egrep '^Initial Root Token:' ./vaultkeys.txt | awk -F':' '{print$2}' | sed s/' '//g`

export MYSQL_HOST=myproject-dev-rds-cluster-20180105051549368100000001.cluster-ctw6wkbqhjcx.us-east-2.rds.amazonaws.com
export MYSQL_PORT=3306
export MYSQL_DB=myprojectdevdb
export MYSQL_USER=root
export MYSQL_PASS=password
export MYSQL_VAULT_USER=vault
export MYSQL_VAULT_PASS=password
export WEB_PROFILE_ARN=arn:aws:iam::561142756585:instance-profile/myproject-dev-web-profile

# store the database host/port information in a kv store
vault write secret/mysql host=${MYSQL_HOST} port=${MYSQL_PORT} database=${MYSQL_DB}

# install the mysql client
yum install -y mysql

# Create a mysql user/pass for vault that has ALL privs (including GRANT) on our db
mysql -h $MYSQL_HOST -u $MYSQL_USER -p$MYSQL_PASS -Bsse \
	"CREATE USER ${MYSQL_VAULT_USER}@'${VAULT_IP}' IDENTIFIED BY '${MYSQL_VAULT_PASS}'; \
	 GRANT CREATE USER, ALL ON {MYSQL_DB}.* TO ${MYSQL_VAULT_USER}@'${VAULT_IP}' WITH GRANT OPTION;"

# configure the vault mysql secrets database
vault mount mysql

# create a connection to our mysql server using the mysql vault user created above
vault write mysql/config/connection \
    connection_url="vault:${MYSQL_VAULT_PASS}@tcp(${MYSQL_HOST}:${MYSQL_PORT})/" \
    allowed_roles="readonly,readwrite"

# configure the lease for the mysql passwords
vault write mysql/config/lease lease=1h lease_max=12h

# create a readonly role for our web applications
vault write mysql/roles/readwrite \
	sql="CREATE USER '{{name}}'@'%' IDENTIFIED BY '{{password}}';GRANT SELECT ON ${MYSQL_DB}.* TO '{{name}}'@'%';"

# create a readwrite role for our web applications
vault write mysql/roles/readwrite \
	sql="CREATE USER '{{name}}'@'%' IDENTIFIED BY '{{password}}';GRANT ALL ON ${MYSQL_DB}.* TO '{{name}}'@'%';"

# Test it as root
vault read secret/mysql
vault read mysql/creds/readonly
vault read mysql/creds/readwrite

# Create a policy for the web servers
cat <<EOF > ./web-policy.hcl
path "sys/*" {
	policy = "deny"
}
path "secret/mysql*" {
	capabilities = ["read"]
}
path "mysql/creds/readonly" {
	capabilities = ["read"]
}
EOF

# Write the web policy to vault
vault policy-write web-policy ./web-policy.hcl

# Enable Vault auth module
vault auth-enable aws-ec2

# Configure aws auth to allow EC2 instances that have our web IAM policy attached to authenticate
vault write auth/aws-ec2/role/web-role bound_iam_instance_profile_arn=${WEB_PROFILE_ARN} policies=web-policy

# Test from a web server
VAULT_IP=10.0.12.30
export VAULT_ADDR=http://${VAULT_IP}:8200
vault write /auth/aws-ec2/login role=web-role pkcs7="$(curl http://169.254.169.254/latest/dynamic/instance-identity/pkcs7)"
VAULT_TOKEN=`vault write /auth/aws-ec2/login role=web-role pkcs7="$(curl http://169.254.169.254/latest/dynamic/instance-identity/pkcs7)" nonce="10933259-e424-d3b0-cb69-46d94a30ce4d" | egrep "^token " | awk '{print$2}'`
vault read secret/mysql
vault read mysql/creds/readwrite

sudo yum -y install python-pip MySQL-python
sudo pip install hvac boto3
sudo yum -
